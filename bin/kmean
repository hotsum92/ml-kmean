#!/usr/bin/env python

import argparse
import pandas as pd
import numpy as np
import os
import joblib
from PIL import Image
from sklearn.cluster import KMeans

parser = argparse.ArgumentParser()

parser.add_argument('file_paths', nargs='+')

parser.add_argument('--n_clusters', type=int, default=4)
parser.add_argument('--n_init', type=int, default=10)
parser.add_argument('--max_iter', type=int, default=300)
parser.add_argument('--tol', type=float, default=0.0001)
parser.add_argument('--random_state', type=int, default=2018)

args = parser.parse_args()

file_paths = args.file_paths

n_clusters = args.n_clusters
n_init = args.n_init
max_iter = args.max_iter
tol = args.tol
random_state = args.random_state

kmeans = KMeans(n_clusters=n_clusters, n_init=n_init, max_iter=max_iter, tol=tol, random_state=random_state)

images = np.array([joblib.load(file_path) for file_path in file_paths])
images = np.array([x.flatten() for x in images])

data = pd.DataFrame(data=images)

kmeans.fit(data)
result_labels = kmeans.labels_

result = pd.DataFrame(data=file_paths, columns=['file_path'])

result = pd.concat([result, pd.DataFrame(data=result_labels, columns=['label'])], axis=1)

print(result.to_csv(index=False))
